AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  PipelineId:
    Type: String
  StageName:
    Type: String
  SourceVersion:
    Type: String
  Handler:
    Type: String
  Runtime:
    Type: String
  TrunkStackName:
    Type: String

Resources:
  Api:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: !Sub "xilution-fox-${PipelineId}-${StageName}-api"
      ProtocolType: HTTP
      Tags:
        originator: "xilution.com"
  LambdaLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      LayerName: !Sub "xilution-fox-${PipelineId}-${StageName}-lambda-layer"
      CompatibleRuntimes:
        - !Ref Runtime
      Content:
        S3Bucket:
          Fn::ImportValue: !Sub "${TrunkStackName}-source-bucket"
        S3Key: !Sub "${SourceVersion}-layer.zip"
  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "xilution-fox-${PipelineId}-${StageName}-lambda"
      Code:
        S3Bucket:
          Fn::ImportValue: !Sub "${TrunkStackName}-source-bucket"
        S3Key: !Sub "${SourceVersion}-function.zip"
      Layers:
        - !Ref LambdaLayer
      Handler: !Ref Handler
      Runtime: !Ref Runtime
      Role:
        Fn::ImportValue: !Sub "${TrunkStackName}-lambda-role-arn"
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
          - Lambda
          - Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ''
        - - 'arn:'
          - !Ref 'AWS::Partition'
          - ':execute-api:'
          - !Ref 'AWS::Region'
          - ':'
          - !Ref 'AWS::AccountId'
          - ':'
          - !Ref Api
          - '/*/*'
  Integration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Fn::ImportValue: !Ref Api
      IntegrationType: AWS_PROXY
      IntegrationMethod: POST
      IntegrationUri: !Join
        - ''
        - - 'arn:aws:apigateway:'
          - !Ref 'AWS::Region'
          - ':lambda:path//2015-03-31/functions/arn:aws:lambda:'
          - !Ref 'AWS::Region'
          - ':'
          - !Ref 'AWS::AccountId'
          - ':function:'
          - !Ref Lambda
          - '/invocations'
      ConnectionType: INTERNET
      PayloadFormatVersion: 2.0
  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: "$default"
      ApiId: !Ref Api
      StageVariables:
        stage: !Ref StageName

Outputs:
  ApiBaseUrl:
    Value: !Sub "https://${Api}.execute-api.${AWS::Region}.amazonaws.com"
    Export:
      Name: !Sub "${AWS::StackName}-api-base-url"
  Integration:
    Value: !Ref Integration
    Export:
      Name: !Sub "${AWS::StackName}-integration"
